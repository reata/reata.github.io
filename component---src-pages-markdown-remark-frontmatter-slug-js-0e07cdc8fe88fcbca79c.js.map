{"version":3,"sources":["webpack://reata-s-blog/./src/pages/{MarkdownRemark.frontmatter__slug}.js"],"names":["useStyles","makeStyles","theme","blogPostHeader","margin","blogInfo","padding","spacing","authorName","fontFamily","fontSize","fontWeight","marginTop","authorSub","color","blogTitle","textAlign","marginBottom","blogExcerpt","blogPostContent","width","lineHeight","letterSpacing","overflowX","fontStyle","backgroundColor","Template","markdownRemark","data","frontmatter","html","rawMarkdownBody","readMinutes","readingTime","classes","maxWidth","container","className","item","xs","title","excerpt","href","date","G","alt","image","getImage","justify","alignItems","dangerouslySetInnerHTML","__html"],"mappings":"wRAWMA,GAAYC,QAAW,SAACC,GAAD,MAAY,CACvCC,eAAgB,CACdC,OAAQ,IAEVC,SAAU,CACRC,QAASJ,EAAMK,QAAQ,EAAG,EAAG,EAAG,IAElCC,WAAY,CACVC,WAAY,OACZC,SAAU,GACVC,WAAY,IACZC,UAAWV,EAAMK,QAAQ,IAE3BM,UAAW,CACTC,MAAO,uBAETC,UAAW,CACTN,WAAY,mBACZC,SAAU,GACVM,UAAW,OACXC,aAAc,GAEhBC,YAAa,CACXT,WAAY,OACZC,SAAU,GACVI,MAAO,uBAETK,gBAAiB,CACfC,MAAO,IACP,OAAQ,CACNX,WAAY,OACZC,SAAU,GACVC,WAAY,IACZL,QAAS,EACTF,OAAQ,wBACRY,UAAW,OACXK,WAAY,SACZC,eAAgB,KAElB,MAAO,CACLV,UAAW,GACXH,WAAY,OACZC,SAAU,GACVY,eAAgB,IAChBD,WAAY,MAEd,OAAQ,CACNZ,WAAY,OACZC,SAAU,GACVY,eAAgB,IAChBD,WAAY,MAEd,QAAS,CACPE,UAAW,OACXd,WAAY,UACZe,UAAW,SACXF,eAAgB,IAChBlB,OAAQ,gBACRU,MAAO,sBACPW,gBAAiB,+BAKR,SAASC,EAAT,GAA2B,IACjCC,EADgC,EAAPC,KACzBD,eACAE,EAAsCF,EAAtCE,YAAaC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,gBACpBC,GAAcC,OAAYF,GAC1BG,EAAUlC,IAEhB,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,MACA,gBAAC,KAAD,MACA,gBAAC,IAAD,CAAWmC,SAAS,MAClB,gBAAC,IAAD,MACA,4BACE,gBAAC,IAAD,CAAMC,WAAS,EAAC7B,QAAS,EAAG8B,UAAWH,EAAQ/B,gBAC7C,gBAAC,IAAD,CAAMmC,MAAI,EAACC,GAAI,GACb,gBAAC,IAAD,CAAKF,UAAWH,EAAQ7B,UACtB,sBAAIgC,UAAWH,EAAQnB,WAAYc,EAAYW,OAC/C,4BAAUH,UAAWH,EAAQhB,aAAcW,EAAYY,SACvD,gBAAC,IAAD,CAAKJ,UAAWH,EAAQ1B,YAAY,qBAAGkC,KAAK,4BAAR,UACpC,gBAAC,IAAD,CAAKL,UAAWH,EAAQrB,WAAYgB,EAAYc,KAAhD,IAAsD,wBAAMN,UAAU,kBAAhB,KAAtD,IAAiGL,EAAjG,eAKJ,gBAAC,IAAD,CAAMM,MAAI,EAACC,GAAI,GACb,gBAAC,IAAD,KACE,gBAAC,EAAAK,EAAD,CAAaC,IAAI,GAAGC,OAAOC,OAASlB,EAAYiB,YAItD,gBAAC,IAAD,CAAMV,WAAS,EAACY,QAAQ,SAASC,WAAW,UAC1C,gBAAC,IAAD,CAAKZ,UAAWH,EAAQf,gBAAiB+B,wBAAyB,CAACC,OAAQrB,QAIjF,gBAAC,IAAD","file":"component---src-pages-markdown-remark-frontmatter-slug-js-0e07cdc8fe88fcbca79c.js","sourcesContent":["import React from \"react\"\nimport {graphql} from \"gatsby\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {Box, Container, Grid, makeStyles, Paper} from \"@material-ui/core\";\nimport Section from \"../components/Section\";\nimport Footer from \"../components/Footer\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Header from \"../components/Header\";\nimport readingTime from \"../utils/readingTime\";\n\n// A huge thanks for Project medium.css: https://github.com/lucagez/medium.css\nconst useStyles = makeStyles((theme) => ({\n  blogPostHeader: {\n    margin: 10,\n  },\n  blogInfo: {\n    padding: theme.spacing(6, 6, 0, 0),\n  },\n  authorName: {\n    fontFamily: \"Lato\",\n    fontSize: 16,\n    fontWeight: 400,\n    marginTop: theme.spacing(2)\n  },\n  authorSub: {\n    color: \"rgba(0, 0, 0, 0.54)\"\n  },\n  blogTitle: {\n    fontFamily: \"Playfair Display\",\n    fontSize: 48,\n    textAlign: \"left\",\n    marginBottom: 8,\n  },\n  blogExcerpt: {\n    fontFamily: \"Lato\",\n    fontSize: 21,\n    color: \"rgba(0, 0, 0, 0.54)\",\n  },\n  blogPostContent: {\n    width: 740,\n    \"& h2\": {\n      fontFamily: \"Lato\",\n      fontSize: 26,\n      fontWeight: 700,\n      padding: 0,\n      margin: \"56px 0 -13px -1.883px\",\n      textAlign: \"left\",\n      lineHeight: \"34.5px\",\n      letterSpacing: -0.45,\n    },\n    \"& p\": {\n      marginTop: 21,\n      fontFamily: \"Lora\",\n      fontSize: 21,\n      letterSpacing: -0.03,\n      lineHeight: 1.58,\n    },\n    \"& li\": {\n      fontFamily: \"Lora\",\n      fontSize: 21,\n      letterSpacing: -0.03,\n      lineHeight: 1.58,\n    },\n    \"& pre\": {\n      overflowX: \"auto\",\n      fontFamily: \"Solaris\",\n      fontStyle: \"italic\",\n      letterSpacing: -0.36,\n      margin: \"45px 0 23px 0\",\n      color: \"rgba(0, 0, 0, 0.68)\",\n      backgroundColor: \"rgba(240,240,240,0.68)\"\n    },\n  }\n}));\n\nexport default function Template({data}) {\n  const {markdownRemark} = data // data.markdownRemark holds your post data\n  const {frontmatter, html, rawMarkdownBody} = markdownRemark\n  const readMinutes = readingTime(rawMarkdownBody);\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Header/>\n      <CssBaseline/>\n      <Container maxWidth=\"lg\">\n        <Section/>\n        <main>\n          <Grid container spacing={1} className={classes.blogPostHeader}>\n            <Grid item xs={6}>\n              <Box className={classes.blogInfo}>\n                <h1 className={classes.blogTitle}>{frontmatter.title}</h1>\n                <subtitle className={classes.blogExcerpt}>{frontmatter.excerpt}</subtitle>\n                <Box className={classes.authorName}><a href=\"https://reata.github.io/\">Reata</a></Box>\n                <Box className={classes.authorSub}>{frontmatter.date} <span className=\"median-divider\">Â·</span> {readMinutes} min\n                  read\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper>\n                <GatsbyImage alt=\"\" image={getImage(frontmatter.image)}/>\n              </Paper>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Box className={classes.blogPostContent} dangerouslySetInnerHTML={{__html: html}}/>\n          </Grid>\n        </main>\n      </Container>\n      <Footer/>\n    </React.Fragment>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      rawMarkdownBody\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        excerpt\n        image {\n          childImageSharp {\n            gatsbyImageData(\n              height: 1600\n            )\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}